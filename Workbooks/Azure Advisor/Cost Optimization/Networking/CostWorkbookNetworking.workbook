{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Networking cost optimization recommendations",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "7a720abf-5b4a-4fb1-adaf-2383e70f625d",
                  "version": "KqlParameterItem/1.0",
                  "name": "Subscription",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "includeAll": true,
                    "showDefault": false
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::all",
                  "label": " Subscription"
                },
                {
                  "id": "a29babbc-5092-46c5-b03b-932c90aa61c9",
                  "version": "KqlParameterItem/1.0",
                  "name": "ResourceGroup",
                  "type": 2,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resourceContainers | where type == 'microsoft.resources/subscriptions/resourcegroups'\r\n| project resourceGroup\r\n| sort by resourceGroup asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Resource Group"
                },
                {
                  "id": "4b9c84b6-14ab-4663-b8b7-8bf0c351bbb5",
                  "version": "KqlParameterItem/1.0",
                  "name": "SingleSubHidden",
                  "type": 1,
                  "isRequired": true,
                  "query": "resourcecontainers\r\n| where type==\"microsoft.resources/subscriptions\"\r\n| take 1\r\n| project subscriptionId",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "isHiddenWhenLocked": true,
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Hidden Subscription"
                },
                {
                  "id": "6637e003-5323-4c6d-9990-426388c833e9",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagName",
                  "type": 2,
                  "query": "Resources\r\n| where tags != '' and tags != '[]'\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| distinct tagName\r\n| sort by tagName asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": null,
                  "label": "Tag Name"
                },
                {
                  "id": "d390e2b5-aa2f-494b-bbb8-0b18c8de9063",
                  "version": "KqlParameterItem/1.0",
                  "name": "TagValue",
                  "type": 2,
                  "query": "Resources\r\n| mvexpand tags\r\n| extend tagName = tostring(bag_keys(tags)[0])\r\n| extend tagValue = tostring(tags[tagName])\r\n| where tags != '' and tags != '[]' and tostring(bag_keys(tags)[0]) == '{TagName}'\r\n| distinct tagValue\r\n| sort by tagValue asc",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": null,
                  "label": "Tag Value"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "75",
            "conditionalVisibilities": [
              {
                "parameterName": "SelectedTab",
                "comparison": "isNotEqualTo",
                "value": "CostInformation"
              },
              {
                "parameterName": "SelectedTab",
                "comparison": "isNotEqualTo",
                "value": "Welcome"
              }
            ],
            "name": "parameters - Filters"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "crossComponentResources": [
                "{Subscription}"
              ],
              "parameters": [
                {
                  "id": "ae7eb928-8873-46f8-a3ff-77f45c207fb3",
                  "version": "KqlParameterItem/1.0",
                  "name": "Location",
                  "type": 2,
                  "query": "Resources\r\n| where type =~ 'Microsoft.Compute/virtualMachines'\r\n| project name, location\r\n| summarize count () by location\r\n| project location",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::1"
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "defaultValue": "value::1",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "label": "Resource Location"
                }
              ],
              "style": "pills",
              "queryType": 1,
              "resourceType": "microsoft.resourcegraph/resources"
            },
            "customWidth": "25",
            "conditionalVisibility": {
              "parameterName": "SelectedTab",
              "comparison": "isEqualTo",
              "value": "AHUB"
            },
            "name": "parameters - location"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "advisorresources\r\n| where type == \"microsoft.advisor/recommendations\"\r\n| where tostring (properties.category) has \"Cost\"\r\n| where properties.impactedField has \"Network\"\r\n| project AffectedResource=tostring(properties.resourceMetadata.resourceId),Impact=properties.impact,resourceGroup,AdditionaInfo=properties.extendedProperties,subscriptionId,Recommendation=tostring(properties.shortDescription.problem),name\r\n| where resourceGroup in ({ResourceGroup})",
                    "size": 0,
                    "title": "Azure advisor recommendations - Networking",
                    "noDataMessage": "You are following all of our cost recommendations for Networking",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": [
                          "Recommendation"
                        ],
                        "expandTopLevel": true
                      }
                    }
                  },
                  "name": "Get-AdvisorRecommendations-Networking"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "# Recommendations for Application Gateways\r\nReview Application Gateways which include backend pools with no targets. Resources listed with 2 red signs are considered idle.",
                    "style": "upsell"
                  },
                  "name": "Recommendations for Application Gateways"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'Microsoft.Network/applicationGateways' and resourceGroup in ({ResourceGroup})\r\n| extend backendPoolsCount = array_length(properties.backendAddressPools),SKUName= tostring(properties.sku.name), SKUTier= tostring(properties.sku.tier),SKUCapacity=properties.sku.capacity,backendPools=properties.backendAddressPools,resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup)\r\n| project id, name, SKUName, SKUTier, SKUCapacity,resourceGroup,subscriptionId\r\n| join (\r\n    resources\r\n    | where type =~ 'Microsoft.Network/applicationGateways' and resourceGroup in ({ResourceGroup})\r\n    | mvexpand backendPools = properties.backendAddressPools\r\n    | extend backendIPCount = array_length(backendPools.properties.backendIPConfigurations)\r\n    | extend backendAddressesCount = array_length(backendPools.properties.backendAddresses)\r\n    | extend backendPoolName  = backendPools.properties.backendAddressPools.name\r\n    | summarize backendIPCount = sum(backendIPCount) ,backendAddressesCount=sum(backendAddressesCount) by id\r\n) on id\r\n| project-away id1\r\n| where  (backendIPCount == 0 or isempty(backendIPCount)) and (backendAddressesCount==0 or isempty(backendAddressesCount))\r\n| order by id asc\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                    "size": 0,
                    "title": "Application gateways with empty backend pools",
                    "noDataMessage": "You don't have any Application Gateways with empty backendpools",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "SKUCapacity",
                          "formatter": 1
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "backendIPCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "disabled",
                                "text": "No Backend IPs"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "Backend IP configured"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "backendAddressesCount",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "disabled",
                                "text": "No Backend targets"
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": "Backend targets available"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "id1",
                          "formatter": 5
                        },
                        {
                          "columnMatch": "Recommendation",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "No Backend targets",
                                "representation": "redBright",
                                "text": "No Backend targets"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "green",
                                "text": "Backend targets enabled"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "backendPoolIPTarget",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "disabled",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "backendPoolVMTarget",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "is Empty",
                                "representation": "disabled",
                                "text": ""
                              },
                              {
                                "operator": ">",
                                "thresholdValue": "0",
                                "representation": "success",
                                "text": ""
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "Recommednation",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "colors",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "No Backend targets",
                                "representation": "redBright",
                                "text": "{0}{1}"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "green",
                                "text": "{0}{1}"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  },
                  "name": "Get-Idle-AppGW"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "# Recommendations for Load Balancers\r\nReview Load balancers with no backend pools, and remove them if not needed.",
                    "style": "upsell"
                  },
                  "name": "Recommendations for Load Balancers"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where resourceGroup in ({ResourceGroup})\r\n| extend resourceGroup=strcat('/subscriptions/',subscriptionId,'/resourceGroups/',resourceGroup), SKUName=tostring(sku.name),SKUTier=tostring(sku.tier),location,backendAddressPools = properties.backendAddressPools\r\n| where type =~ 'microsoft.network/loadbalancers' and array_length(backendAddressPools) == 0 \r\n| order by id asc\r\n| project id,name, SKUName,SKUTier,backendAddressPools, location,resourceGroup, subscriptionId\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | distinct id\r\n    )\r\n    on id",
                    "size": 0,
                    "title": "Load Balancers with empty backend pools",
                    "noDataMessage": "You don't have any Load Balancers with empty backendpools",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "backendAddressPools",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "==",
                                "thresholdValue": "0",
                                "representation": "disabled",
                                "text": "Empty Backend Pool"
                              },
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "success",
                                "text": ""
                              }
                            ]
                          }
                        },
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        },
                        {
                          "columnMatch": "id1",
                          "formatter": 5
                        }
                      ]
                    }
                  },
                  "name": "Get-Idle-LB"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "# Recommendations for Public IP Addresses\r\nReview unattached Public IP addresses, as they may represent additional cost.\r\n<br>This query will also show Public IPs attached to Idle network cards.\r\n",
                    "style": "upsell"
                  },
                  "name": "Recommendations for PIP"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources \r\n| where resourceGroup in ({ResourceGroup})\r\n| where type =~ 'Microsoft.Network/publicIPAddresses' and isempty(properties.ipConfiguration) and isempty(properties.natGateway) \r\n| extend PublicIpId=id, IPName=name, AllocationMethod=tostring(properties.publicIPAllocationMethod), SKUName=sku.name, Location=location \r\n| project PublicIpId,IPName, SKUName, resourceGroup, Location, AllocationMethod, subscriptionId\r\n| union (\r\n Resources \r\n | where type =~ 'microsoft.network/networkinterfaces' and isempty(properties.virtualMachine) and isnull(properties.privateEndpoint) and isnotempty(properties.ipConfigurations) \r\n | extend IPconfig = properties.ipConfigurations \r\n | mv-expand IPconfig \r\n | extend PublicIpId= tostring(IPconfig.properties.publicIPAddress.id)\r\n | project PublicIpId\r\n | join ( \r\n    resources \r\n    | where type =~ 'Microsoft.Network/publicIPAddresses'\r\n    | extend PublicIpId=id, IPName=name, AllocationMethod=tostring(properties.publicIPAllocationMethod), SKUName=sku.name, resourceGroup, Location=location \r\n ) on PublicIpId\r\n | project PublicIpId,IPName, SKUName, resourceGroup, Location, AllocationMethod, subscriptionId\r\n)\r\n| join kind = innerunique(\r\n    resources\r\n    | extend replaced_tags = replace('{}', 'null', tostring(tags))\r\n    | extend replaced_tags = parse_json(replaced_tags)\r\n    | mv-expand replaced_tags\r\n    | extend tagName = tostring(bag_keys(replaced_tags)[0])\r\n    | extend tagValue = tostring(replaced_tags['{TagName}'])\r\n    | where tagName has '{TagName}' and tagValue has '{TagValue}'\r\n    | extend PublicIpId=id\r\n    | distinct PublicIpId\r\n    )\r\n    on PublicIpId\r\n",
                    "size": 0,
                    "title": "Unattached Public IPs",
                    "noDataMessage": "You have no unattached Public IPs",
                    "noDataMessageStyle": 3,
                    "showExportToExcel": true,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "subscriptionId",
                          "formatter": 15,
                          "formatOptions": {
                            "linkTarget": null,
                            "showIcon": true
                          }
                        }
                      ]
                    }
                  },
                  "name": "Get-Idle-PIP"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "# Recommendations for Virtual Network Gateways\r\nReview idle Virtual Network Gateways that have no connections defined, as they may represent additional cost.\r\n",
                    "style": "upsell"
                  },
                  "name": "Recommendations for PIP - Copy"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == \"microsoft.network/virtualnetworkgateways\"\r\n| project id\r\n| join kind = leftouter(\r\n    resources\r\n    | where type == \"microsoft.network/connections\"\r\n    | extend id = tostring(properties.virtualNetworkGateway1.id)\r\n    | project id\r\n    | union (\r\n         resources\r\n         | where type == \"microsoft.network/connections\"\r\n         | extend id = tostring(properties.virtualNetworkGateway2.id)\r\n         | project id\r\n    )\r\n) on id\r\n| where isempty(id1)\r\n| project id, status=id",
                    "size": 0,
                    "title": "Idle Virtual Network Gateways",
                    "noDataMessage": "No Idle Virtual Network Gateways found",
                    "noDataMessageStyle": 3,
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "status",
                          "formatter": 18,
                          "formatOptions": {
                            "thresholdsOptions": "icons",
                            "thresholdsGrid": [
                              {
                                "operator": "Default",
                                "thresholdValue": null,
                                "representation": "warning",
                                "text": "Error-Connection not configured"
                              }
                            ]
                          }
                        }
                      ],
                      "filter": true
                    }
                  },
                  "name": "query - Idel Virtual Network gateways"
                }
              ]
            },
            "name": "networking - Subscription"
          }
        ]
      },
      "name": "group - 0"
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}
{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Backup Security Posture\r\n\r\nThis report helps you view information on whether all of your resources have the recommended backup security settings or not. [Learn more](https://aka.ms/BCDRAuditReportSecurityPostureDocs)"
      },
      "name": "Heading1"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::all"
        ],
        "parameters": [
          {
            "id": "c088733f-3203-4c22-a60d-d49fe91a1a85",
            "version": "KqlParameterItem/1.0",
            "name": "VaultSubscription",
            "label": "Vault Subscription",
            "type": 2,
            "description": "Use to filter for particular subscriptions where vaults exist",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "resources\r\n| where type has \"microsoft.recoveryservices\"\r\n| distinct subscriptionId",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "selectAllValue": "",
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": []
          },
          {
            "id": "bfc5108e-dbd5-406c-8785-ce0a06663c7c",
            "version": "KqlParameterItem/1.0",
            "name": "DataSourceSubscription",
            "label": "Datasource Subscription",
            "type": 2,
            "description": "Use to filter for datasources in a specific subscription",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "\r\nrecoveryservicesresources\r\n| extend VaultSubscriptionList = split('{VaultSubscription}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| mv-expand VaultSubscriptionList to typeof(string)\r\n| where tostring(subscriptionId) == VaultSubscriptionList\r\n| extend dataSourceSubscription = tostring(split(tostring(todynamic(properties).dataSourceInfo.resourceID),\"/\")[2])\r\n| where isnotempty(dataSourceSubscription)\r\n| distinct dataSourceSubscription\r\n\r\n\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "4d4c83bd-d78f-4ecc-bed2-b56a1c176597",
            "version": "KqlParameterItem/1.0",
            "name": "DataSourceLocation",
            "label": "Datasource Location",
            "type": 2,
            "description": "Use to filter for datasources in a specific location",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "\r\nrecoveryservicesresources\r\n| extend VaultSubscriptionList = split('{VaultSubscription}',\",\")\r\n| where type ==\"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| mv-expand VaultSubscriptionList to typeof(string) \r\n| where tostring(subscriptionId) == VaultSubscriptionList\r\n| extend datasourceLocation = tostring(todynamic(properties).dataSourceInfo.resourceLocation)\r\n| where isnotempty(datasourceLocation)\r\n| distinct datasourceLocation\r\n\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "851812a0-bf3a-4cd9-814e-f5003fb9f9d2",
            "version": "KqlParameterItem/1.0",
            "name": "DataSourceResourceGroup",
            "label": "Datasource Resource Group",
            "type": 2,
            "description": "Use to filter for datasources in a specific resource group",
            "isRequired": true,
            "multiSelect": true,
            "quote": "",
            "delimiter": ",",
            "query": "\r\nrecoveryservicesresources\r\n| extend VaultSubscriptionList = split('{VaultSubscription}',\",\")\r\n| where type has \"microsoft.recoveryservices\"\r\n| mv-expand VaultSubscriptionList to typeof(string)\r\n| where tostring(subscriptionId) == VaultSubscriptionList\r\n| extend dataSourceResourceGroup = tostring(split(tostring(todynamic(properties).dataSourceInfo.resourceID),\"/\")[4])\r\n| where isnotempty(dataSourceResourceGroup)\r\n| distinct dataSourceResourceGroup\r\n\r\n\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [
                "value::all"
              ],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": [
              "value::all"
            ]
          },
          {
            "id": "4b91f1b0-b2a2-4db1-a6ca-62b33623a48b",
            "version": "KqlParameterItem/1.0",
            "name": "SearchItem",
            "label": "Search Item",
            "type": 1,
            "description": "Use to search for a specific datasource by name"
          },
          {
            "id": "fef296cf-1433-4189-8b1c-09eb94516aa0",
            "version": "KqlParameterItem/1.0",
            "name": "SearchTags",
            "label": "Search Tags",
            "type": 1,
            "description": "Use to filter datasources by tag"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "customWidth": "100",
      "name": "Filters1"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "recoveryservicesresources\r\n| extend dataSourceSubscriptionList = split('{DataSourceSubscription}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceId = tostring(entityProperties.dataSourceInfo.resourceID)\r\n| extend dataSourceIdParts = split(dataSourceId,\"/\")\r\n| extend dataSourceSubscription = tostring(dataSourceIdParts[2])\r\n| mv-expand  dataSourceSubscriptionList to typeof(string)\r\n| where dataSourceSubscription == dataSourceSubscriptionList\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceLocationList = split('{DataSourceLocation}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceLocation = tostring(entityProperties.dataSourceInfo.resourceLocation)\r\n| mv-expand  dataSourceLocationList to typeof(string)\r\n| where dataSourceLocation == dataSourceLocationList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceResourceGroupList = split('{DataSourceResourceGroup}',\",\")\r\n| where type ==\"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceId = tostring(entityProperties.dataSourceInfo.resourceID)\r\n| extend dataSourceIdParts = split(dataSourceId,\"/\")\r\n| extend dataSourceResourceGroup = tostring(dataSourceIdParts[4])\r\n| mv-expand  dataSourceResourceGroupList to typeof(string)\r\n| where dataSourceResourceGroup == dataSourceResourceGroupList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| extend BackupItemName = tostring(entityProperties2.friendlyName)\r\n| extend SubscriptionId = subscriptionId2\r\n| extend DataSourceResourceGroup = dataSourceResourceGroup\r\n| extend DataSourceLocation = dataSourceLocation\r\n| extend VaultIds = split(entityProperties2.policyInfo.policyId,\"/\")\r\n| extend VaultName = tostring(VaultIds[8])\r\n| extend VaultId = strcat(strcat(strcat(\"/subscriptions/\",tostring(VaultIds[2]),\"/resourceGroups/\"),tostring(VaultIds[4]),\"/providers/Microsoft.RecoveryServices/vaults/\"),tostring(VaultIds[8]))\r\n| project BackupItemName = BackupItemName,VaultId = VaultId,SubscriptionId = SubscriptionId,ResourceGroup = DataSourceResourceGroup,ResourceLocation = DataSourceLocation,Tags = tags2\r\n| join kind = innerunique(\r\nresources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n) on $left.VaultId == $right.id\r\n| extend properties = todynamic(properties)\r\n| extend UsingPE = iff(tostring(properties.privateEndpointStateForBackup) ==\"None\",\"Not Using PE\",\"Using PE\")\r\n| extend SearchItem = iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupItemName)\r\n| extend SearchTags = iff(isnotempty('{SearchTags}'),'{SearchTags}',tags)\r\n| where BackupItemName contains SearchItem\r\n| where tags contains SearchTags\r\n| sort by id\r\n| summarize count() by UsingPE\r\n\r\n",
        "size": 3,
        "title": "Backup instances with private endpoints enabled for vault",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart"
      },
      "customWidth": "38",
      "name": "query - 2",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "recoveryservicesresources\r\n| extend dataSourceSubscriptionList = split('{DataSourceSubscription}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceId = tostring(entityProperties.dataSourceInfo.resourceID)\r\n| extend dataSourceIdParts = split(dataSourceId,\"/\")\r\n| extend dataSourceSubscription = tostring(dataSourceIdParts[2])\r\n| mv-expand  dataSourceSubscriptionList to typeof(string)\r\n| where dataSourceSubscription == dataSourceSubscriptionList\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceLocationList = split('{DataSourceLocation}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceLocation = tostring(entityProperties.dataSourceInfo.resourceLocation)\r\n| mv-expand  dataSourceLocationList to typeof(string)\r\n| where dataSourceLocation == dataSourceLocationList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceResourceGroupList = split('{DataSourceResourceGroup}',\",\")\r\n| where type ==\"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceId = tostring(entityProperties.dataSourceInfo.resourceID)\r\n| extend dataSourceIdParts = split(dataSourceId,\"/\")\r\n| extend dataSourceResourceGroup = tostring(dataSourceIdParts[4])\r\n| mv-expand  dataSourceResourceGroupList to typeof(string)\r\n| where dataSourceResourceGroup == dataSourceResourceGroupList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| extend BackupItemName = tostring(entityProperties2.friendlyName)\r\n| extend SubscriptionId = subscriptionId2\r\n| extend DataSourceResourceGroup = dataSourceResourceGroup\r\n| extend DataSourceLocation = dataSourceLocation\r\n| extend VaultIds = split(entityProperties2.policyInfo.policyId,\"/\")\r\n| extend VaultName = tostring(VaultIds[8])\r\n| extend VaultId = strcat(strcat(strcat(\"/subscriptions/\",tostring(VaultIds[2]),\"/resourceGroups/\"),tostring(VaultIds[4]),\"/providers/Microsoft.RecoveryServices/vaults/\"),tostring(VaultIds[8]))\r\n| project BackupItemName = BackupItemName,VaultId = VaultId,SubscriptionId = SubscriptionId,ResourceGroup = DataSourceResourceGroup,ResourceLocation = DataSourceLocation,Tags = tags2\r\n| join kind = innerunique(\r\nresources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n) on $left.VaultId == $right.id\r\n| extend properties = todynamic(properties)\r\n| extend UsingCustomerManagedKey = iff(isnotempty(tostring(properties.encryption.keyVaultProperties.keyUri)),\"Using CMK\",\"Not Using CMK\")\r\n| extend SearchItem = iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupItemName)\r\n| extend SearchTags = iff(isnotempty('{SearchTags}'),'{SearchTags}',tags)\r\n| where BackupItemName contains SearchItem\r\n| where tags contains SearchTags\r\n| sort by id\r\n| summarize count() by UsingCustomerManagedKey\r\n\r\n",
        "size": 3,
        "title": "Backup instances with customer managed keys enabled for vault",
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "piechart"
      },
      "customWidth": "38",
      "name": "query - 3",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"1.0.0\",\"content\":\"[{\\\"Question\\\": \\\"How can I add more columns to the grid?\\\",\\\"Answer\\\":\\\"Community-Workbooks/Azure Backup/faq/customquery-arg.workbook\\\"},\\r\\n{\\\"Question\\\": \\\"I want to re-use some of these views and create a custom report. How can I achieve that?\\\",\\\"Answer\\\":\\\"Community-Workbooks/Azure Backup/faq/reuseview.workbook\\\"},\\r\\n{\\\"Question\\\": \\\"How can I export a grid as Excel?\\\", \\\"Answer\\\":\\\"Community-Workbooks/Azure Backup/faq/exportexcel.workbook\\\"},\\r\\n{\\\"Question\\\": \\\"What resources are shown in these reports?\\\",\\\"Answer\\\":\\\"Community-Workbooks/Azure Backup/faq/resourcesshown-backupinstancereports.workbook\\\"}]\",\"transformers\":null}",
        "size": 3,
        "title": "Frequently asked questions",
        "queryType": 8,
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "Question",
              "formatter": 1,
              "formatOptions": {
                "linkColumn": "Answer",
                "linkTarget": "WorkbookTemplate",
                "linkIsContextBlade": true,
                "customColumnWidthSetting": "100%"
              }
            },
            {
              "columnMatch": "A",
              "formatter": 5
            }
          ]
        }
      },
      "customWidth": "24",
      "name": "query - 9 - Copy - Copy",
      "styleSettings": {
        "showBorder": true
      }
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "crossComponentResources": [
          "value::all"
        ],
        "parameters": [
          {
            "id": "66bc3637-8d1e-4ce3-a683-88df85c5430b",
            "version": "KqlParameterItem/1.0",
            "name": "RowsPerPage",
            "label": "Rows Per Page",
            "type": 2,
            "isRequired": true,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "jsonData": "[\r\n    { \"value\":10, \"label\":\"10\", \"selected\":true  },\r\n    { \"value\":25, \"label\":\"25\" },\r\n    { \"value\":50, \"label\":\"50\" },\r\n    { \"value\":100, \"label\":\"100\" },\r\n    { \"value\":250, \"label\":\"250\" },\r\n    { \"value\":500, \"label\":\"500\" },\r\n    { \"value\":1000, \"label\":\"1000\" }\r\n]"
          },
          {
            "id": "443d5be4-ef89-4674-bc3b-8ef1f8498129",
            "version": "KqlParameterItem/1.0",
            "name": "Page",
            "type": 2,
            "isRequired": true,
            "query": "recoveryservicesresources\r\n| extend dataSourceSubscriptionList = split('{DataSourceSubscription}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceId = tostring(entityProperties.dataSourceInfo.resourceID)\r\n| extend dataSourceIdParts = split(dataSourceId,\"/\")\r\n| extend dataSourceSubscription = tostring(dataSourceIdParts[2])\r\n| mv-expand  dataSourceSubscriptionList to typeof(string)\r\n| where dataSourceSubscription == dataSourceSubscriptionList\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceLocationList = split('{DataSourceLocation}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceLocation = tostring(entityProperties.dataSourceInfo.resourceLocation)\r\n| mv-expand  dataSourceLocationList to typeof(string)\r\n| where dataSourceLocation == dataSourceLocationList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceResourceGroupList = split('{DataSourceResourceGroup}',\",\")\r\n| where type ==\"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend entityProperties = todynamic(properties)\r\n| extend dataSourceId = tostring(entityProperties.dataSourceInfo.resourceID)\r\n| extend dataSourceIdParts = split(dataSourceId,\"/\")\r\n| extend dataSourceResourceGroup = tostring(dataSourceIdParts[4])\r\n| mv-expand  dataSourceResourceGroupList to typeof(string)\r\n| where dataSourceResourceGroup == dataSourceResourceGroupList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| extend BackupItemName = tostring(entityProperties2.friendlyName)\r\n| extend SubscriptionId = subscriptionId2\r\n| extend DataSourceResourceGroup = dataSourceResourceGroup\r\n| extend DataSourceLocation = dataSourceLocation\r\n| extend VaultIds = split(entityProperties2.policyInfo.policyId,\"/\")\r\n| extend VaultName = tostring(VaultIds[8])\r\n| extend VaultId = strcat(strcat(strcat(\"/subscriptions/\",tostring(VaultIds[2]),\"/resourceGroups/\"),tostring(VaultIds[4]),\"/providers/Microsoft.RecoveryServices/vaults/\"),tostring(VaultIds[8]))\r\n| project BackupItemName = BackupItemName,VaultId = VaultId,SubscriptionId = SubscriptionId,ResourceGroup = DataSourceResourceGroup,ResourceLocation = DataSourceLocation,Tags = tags2\r\n| join kind = innerunique(\r\nresources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n) on $left.VaultId == $right.id\r\n| extend properties = todynamic(properties)\r\n| extend UsingPE = iff(tostring(properties.privateEndpointStateForBackup) ==\"None\",\"Not Using PE\",\"Using PE\")\r\n| extend SearchItem = iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupItemName)\r\n| extend SearchTags = iff(isnotempty('{SearchTags}'),'{SearchTags}',tags)\r\n| where BackupItemName has SearchItem\r\n| where tags has SearchTags\r\n| summarize c = count()\r\n| project num = (c-1)/toint('{RowsPerPage}') + 1\r\n| project nums = range(1,num,1), num\r\n| sort by toint(num) asc\r\n| mvexpand nums\r\n| project nums = tostring(nums), num = strcat(tostring(nums),\" of \",tostring(num))\r\n\r\n",
            "crossComponentResources": [
              "value::all"
            ],
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 1,
            "resourceType": "microsoft.resourcegraph/resources",
            "value": "5"
          }
        ],
        "style": "above",
        "doNotRunWhenHidden": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources"
      },
      "customWidth": "100",
      "name": "Filters1 - Copy"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "recoveryservicesresources\r\n| extend dataSourceSubscriptionList = split('{DataSourceSubscription}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend dataSourceSubscription = tostring(split(tostring(todynamic(properties).dataSourceInfo.resourceID),\"/\")[2])\r\n| mv-expand  dataSourceSubscriptionList to typeof(string)\r\n| where dataSourceSubscription == dataSourceSubscriptionList\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceLocationList = split('{DataSourceLocation}',\",\")\r\n| where type == \"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend dataSourceLocation = tostring(todynamic(properties).dataSourceInfo.resourceLocation)\r\n| mv-expand  dataSourceLocationList to typeof(string)\r\n| where dataSourceLocation == dataSourceLocationList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| join kind = innerunique(\r\nrecoveryservicesresources\r\n| extend dataSourceResourceGroupList = split('{DataSourceResourceGroup}',\",\")\r\n| where type ==\"microsoft.recoveryservices/vaults/backupfabrics/protectioncontainers/protecteditems\"\r\n| extend dataSourceResourceGroup = tostring(split(tostring(todynamic(properties).dataSourceInfo.resourceID),\"/\")[4])\r\n| mv-expand  dataSourceResourceGroupList to typeof(string)\r\n| where dataSourceResourceGroup == dataSourceResourceGroupList\r\n) on $left.subscriptionId == $right.subscriptionId\r\n| extend BackupItemName = tostring(todynamic(properties2).friendlyName)\r\n| extend SubscriptionId = subscriptionId2\r\n| extend DataSourceResourceGroup = dataSourceResourceGroup\r\n| extend DataSourceLocation = dataSourceLocation\r\n| extend VaultName = tostring(split(todynamic(properties2).policyInfo.policyId,\"/\")[8])\r\n| extend VaultId = strcat(strcat(strcat(\"/subscriptions/\",tostring(split(todynamic(properties2).policyInfo.policyId,\"/\")[2]),\"/resourceGroups/\"),tostring(split(todynamic(properties2).policyInfo.policyId,\"/\")[4]),\"/providers/Microsoft.RecoveryServices/vaults/\"),tostring(split(todynamic(properties2).policyInfo.policyId,\"/\")[8]))\r\n| project BackupItemName = BackupItemName,VaultId = VaultId,SubscriptionId = SubscriptionId,ResourceGroup = DataSourceResourceGroup,ResourceLocation = DataSourceLocation,Tags = tags2\r\n| join kind = innerunique(\r\nresources\r\n| where type == \"microsoft.recoveryservices/vaults\"\r\n) on $left.VaultId == $right.id\r\n| extend UsingPE = iff(tostring(todynamic(properties).privateEndpointStateForBackup) ==\"None\",\"Not Using PE\",\"Using PE\")\r\n| extend UsingCustomerManagedKey = iff(isnotempty(tostring(todynamic(properties).encryption.keyVaultProperties.keyUri)),\"Yes\",\"No\")\r\n| extend SearchItem = iff(isnotempty('{SearchItem}'),'{SearchItem}',BackupItemName)\r\n| extend SearchTags = iff(isnotempty('{SearchTags}'),'{SearchTags}',tags)\r\n| where BackupItemName contains SearchItem\r\n| where tags contains SearchTags\r\n| sort by id\r\n| extend row_num = row_number()\r\n| extend page_num = tostring(((row_num-1)/toint('{RowsPerPage}') + 1))\r\n| where page_num has '{Page}'\r\n| project BackupItemName = BackupItemName,VaultId = id,VaultName = name,VaultResourceGroup = resourceGroup,VaultLocation = location,VaultSubscription = subscriptionId,UsingPrivateEndPoint = UsingPE,UsingCustomerManagedKey = UsingCustomerManagedKey\r\n",
        "size": 3,
        "title": "List of backup instances and current security posture",
        "showRefreshButton": true,
        "showExportToExcel": true,
        "queryType": 1,
        "resourceType": "microsoft.resourcegraph/resources",
        "crossComponentResources": [
          "value::all"
        ],
        "visualization": "table",
        "gridSettings": {
          "formatters": [
            {
              "columnMatch": "BackupItemName",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "VaultId",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "subTarget": "properties",
                "showIcon": true,
                "customColumnWidthSetting": "20%"
              }
            },
            {
              "columnMatch": "VaultName",
              "formatter": 5,
              "formatOptions": {
                "linkColumn": "VaultId",
                "linkTarget": "Resource",
                "subTarget": "properties"
              }
            },
            {
              "columnMatch": "VaultResourceGroup",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "VaultLocation",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "VaultSubscription",
              "formatter": 13,
              "formatOptions": {
                "linkTarget": "Resource",
                "showIcon": true,
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "UsingPrivateEndPoint",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            },
            {
              "columnMatch": "UsingCustomerManagedKey",
              "formatter": 0,
              "formatOptions": {
                "customColumnWidthSetting": "15%"
              }
            }
          ],
          "rowLimit": 1000,
          "labelSettings": [
            {
              "columnId": "BackupItemName",
              "label": "Backup instance"
            },
            {
              "columnId": "VaultId",
              "label": "Vault (click to update properties)"
            },
            {
              "columnId": "VaultName",
              "label": "VaultName",
              "comment": ""
            },
            {
              "columnId": "VaultResourceGroup",
              "label": "Vault Resource Group"
            },
            {
              "columnId": "VaultLocation",
              "label": "Vault Location"
            },
            {
              "columnId": "VaultSubscription",
              "label": "Vault subscription"
            },
            {
              "columnId": "UsingPrivateEndPoint",
              "label": "Using Private endpoints?"
            },
            {
              "columnId": "UsingCustomerManagedKey",
              "label": "Using customer managed keys?"
            }
          ]
        }
      },
      "name": "query - 4",
      "styleSettings": {
        "margin": "5px",
        "padding": "5px",
        "showBorder": true
      }
    }
  ],
  "fallbackResourceIds": [
    "Azure Monitor"
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}

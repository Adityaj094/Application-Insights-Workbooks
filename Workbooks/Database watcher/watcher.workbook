{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "d06486e9-f3f2-4a04-a965-1623d756f79b",
            "version": "KqlParameterItem/1.0",
            "name": "adxClusterUri",
            "label": "ADX cluster URI",
            "type": 1,
            "description": "Connection URI of the ADX cluster containing the database with monitoring data",
            "isRequired": true,
            "value": null
          },
          {
            "id": "dffea4e1-a3d7-475d-8d7c-03b99769ee73",
            "version": "KqlParameterItem/1.0",
            "name": "adxDatabase",
            "label": "ADX database",
            "type": 2,
            "description": "Select an ADX database that contains monitoring data",
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show databases\\r\\n| project DatabaseName\\r\\n| sort by DatabaseName asc\",\"clusterName\":\"{adxClusterUri}\"}",
            "value": null,
            "typeSettings": {
              "additionalResourceOptions": [],
              "showDefault": false
            },
            "queryType": 9
          },
          {
            "id": "4f70ae2e-2573-497d-a3f4-fd132151f204",
            "version": "KqlParameterItem/1.0",
            "name": "adxClusterPingResult",
            "type": 1,
            "isRequired": true,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show database\\r\\n| project 1\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "queryType": 9
          }
        ],
        "style": "pills",
        "queryType": 9
      },
      "name": "adx_parameters"
    },
    {
      "type": 1,
      "content": {
        "json": "Cannot connect to ADX cluster `{adxClusterUri}`, database `{adxDatabase}`. The cluster may be stopped or unreachable, specified cluster URI may be invalid, or permissions may be insufficient.",
        "style": "warning"
      },
      "conditionalVisibilities": [
        {
          "parameterName": "adxClusterPingResult",
          "comparison": "isEqualTo",
          "value": ""
        },
        {
          "parameterName": "adxClusterUri",
          "comparison": "isNotEqualTo"
        }
      ],
      "name": "missing_data_bad_permissions_text"
    },
    {
      "type": 9,
      "content": {
        "version": "KqlParameterItem/1.0",
        "parameters": [
          {
            "id": "38d18c5b-3cca-4bae-85b7-c74821db1d12",
            "version": "KqlParameterItem/1.0",
            "name": "sqlserver_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqlserver_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqlmi_instance_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqlmi_instance_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "b3573a09-1578-4f01-b349-2d6d42a6759f"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_single_database_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqldb_single_database_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "02dd3c28-de96-4552-b629-f0d0078ca231"
          },
          {
            "version": "KqlParameterItem/1.0",
            "name": "sqldb_elastic_pool_properties",
            "type": 1,
            "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\".show tables\\r\\n| where TableName == \\\"sqldb_elastic_pool_properties\\\"\\r\\n| project true\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
            "isHiddenWhenLocked": true,
            "timeContext": {
              "durationMs": 86400000
            },
            "queryType": 9,
            "id": "6d3e9aa3-6079-493e-9710-438aeab4aef4"
          },
          {
            "id": "66ccd5b4-8437-402f-8863-6457131e9e52",
            "version": "KqlParameterItem/1.0",
            "name": "sqlserverTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlserver_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqlserver_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = strcat(server_name, machine_name), target_type = \"sqlserver\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", target_type = \"sqlserver\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "6854e80e-2638-47ef-a316-c9a5781fe8b7",
            "version": "KqlParameterItem/1.0",
            "name": "sqlmiTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqlmi_instance_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqlmi_instance_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = managed_instance_name, target_type = \"sqlmi\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", target_type = \"sqlmi\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "c903b764-be31-44f5-8fe2-b6bc1c452cd1",
            "version": "KqlParameterItem/1.0",
            "name": "sqldbSingleDatabaseTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqldb_single_database_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqldb_single_database_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = strcat(logical_server_name, database_name), target_type = \"sqldb_single_database\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", target_type = \"sqldb_single_database\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          },
          {
            "id": "980b4e27-3e01-4d23-a64f-e789664f5747",
            "version": "KqlParameterItem/1.0",
            "name": "sqldbElasticPoolTargetCountQuery",
            "type": 1,
            "isHiddenWhenLocked": true,
            "criteriaData": [
              {
                "criteriaContext": {
                  "leftOperand": "sqldb_elastic_pool_properties",
                  "operator": "==",
                  "rightValType": "static",
                  "rightVal": "1",
                  "resultValType": "static",
                  "resultVal": "sqldb_elastic_pool_properties | where sample_time_utc > ago(72h) | project sample_time_utc, unique_name = strcat(logical_server_name, elastic_pool_name), target_type = \"sqldb_elastic_pool\""
                }
              },
              {
                "criteriaContext": {
                  "operator": "Default",
                  "resultValType": "static",
                  "resultVal": "print sample_time_utc = now(), unique_name = \"\", target_type = \"sqldb_elastic_pool\""
                }
              }
            ],
            "timeContext": {
              "durationMs": 86400000
            }
          }
        ],
        "style": "above",
        "queryType": 0,
        "resourceType": "microsoft.operationalinsights/workspaces"
      },
      "conditionalVisibility": {
        "parameterName": "alwaysHidden",
        "comparison": "isNotEqualTo"
      },
      "name": "table_presence_parameters"
    },
    {
      "type": 3,
      "content": {
        "version": "KqlItem/1.0",
        "query": "{\"version\":\"AzureDataExplorerQuery/1.0\",\"queryText\":\"let metric = datatable(key:int, target_type:string, metric_name:string, tile_ordinal:int) [\\r\\n1, \\\"sqlserver\\\", \\\"total\\\", 41,\\r\\n1, \\\"sqlmi\\\", \\\"total\\\", 31,\\r\\n1, \\\"sqldb_single_database\\\", \\\"total\\\", 11,\\r\\n1, \\\"sqldb_elastic_pool\\\", \\\"total\\\", 21,\\r\\n1, \\\"sqlserver\\\", \\\"new\\\", 42,\\r\\n1, \\\"sqlmi\\\", \\\"new\\\", 32,\\r\\n1, \\\"sqldb_single_database\\\", \\\"new\\\", 12,\\r\\n1, \\\"sqldb_elastic_pool\\\", \\\"new\\\", 22,\\r\\n1, \\\"sqlserver\\\", \\\"not collecting\\\", 43,\\r\\n1, \\\"sqlmi\\\", \\\"not collecting\\\", 33,\\r\\n1, \\\"sqldb_single_database\\\", \\\"not collecting\\\", 13,\\r\\n1, \\\"sqldb_elastic_pool\\\", \\\"not collecting\\\", 23\\r\\n];\\r\\nunion\\r\\n(\\r\\n{sqldbSingleDatabaseTargetCountQuery}\\r\\n),\\r\\n(\\r\\n{sqldbElasticPoolTargetCountQuery}\\r\\n),\\r\\n(\\r\\n{sqlmiTargetCountQuery}\\r\\n),\\r\\n(\\r\\n{sqlserverTargetCountQuery}\\r\\n)\\r\\n| summarize min_sample_time_utc = min(sample_time_utc), max_sample_time_utc = max(sample_time_utc)\\r\\n            by target_type, unique_name\\r\\n| project target_type,\\r\\n          unique_name,\\r\\n          minutes_since_last_sample = datetime_diff('minute', now(), max_sample_time_utc),\\r\\n          minutes_since_first_sample = datetime_diff('minute', now(), min_sample_time_utc)\\r\\n| summarize total_targets = dcountif(unique_name, isnotempty(unique_name)),\\r\\n            new_targets = dcountif(unique_name, minutes_since_first_sample <= 360 and isnotempty(unique_name)),\\r\\n            dropped_targets = dcountif(unique_name, minutes_since_last_sample >= 60 and isnotempty(unique_name))\\r\\n            by target_type\\r\\n| extend key = int(1)\\r\\n| join kind=rightouter metric on key, target_type\\r\\n| extend target_type = target_type1,\\r\\n         metric = case(\\r\\n                      metric_name == \\\"total\\\", total_targets,\\r\\n                      metric_name == \\\"new\\\", new_targets,\\r\\n                      metric_name == \\\"not collecting\\\", dropped_targets,\\r\\n                      long(null)\\r\\n                      )\\r\\n| extend metric = iif(isnull(metric), 0, metric)\\r\\n| where metric_name == \\\"total\\\" or metric > 0\\r\\n| project target_type = case(\\r\\n                            target_type == \\\"sqldb_single_database\\\", \\\"Azure SQL databases\\\",\\r\\n                            target_type == \\\"sqldb_elastic_pool\\\", \\\"Azure SQL elastic pools\\\",\\r\\n                            target_type == \\\"sqlmi\\\", \\\"Azure SQL managed instances\\\",\\r\\n                            target_type == \\\"sqlserver\\\", \\\"SQL Server instances\\\",\\r\\n                            \\\"\\\"\\r\\n                            ),\\r\\n          metric_name,\\r\\n          metric = strcat(metric, \\\" \\\", metric_name),\\r\\n          tile_ordinal,\\r\\n          fleet_link = case(\\r\\n                            target_type == \\\"sqldb_single_database\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\",\\r\\n                            target_type == \\\"sqldb_elastic_pool\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Database/estate\\\",\\r\\n                            target_type == \\\"sqlmi\\\", \\\"Community-Workbooks/Database watcher/Azure SQL Managed Instance/estate\\\",\\r\\n                            target_type == \\\"sqlserver\\\", \\\"Community-Workbooks/Database watcher/SQL Server/estate\\\",\\r\\n                            \\\"\\\"\\r\\n                            ),\\r\\n          fleet_workbook_name = case(\\r\\n                                     target_type == \\\"sqldb_single_database\\\", \\\"Azure SQL databases and elastic pools\\\",\\r\\n                                     target_type == \\\"sqldb_elastic_pool\\\", \\\"Azure SQL databases and elastic pools\\\",\\r\\n                                     target_type == \\\"sqlmi\\\", \\\"Azure SQL managed instances\\\",\\r\\n                                     target_type == \\\"sqlserver\\\", \\\"SQL Server instances\\\",\\r\\n                                     \\\"\\\"\\r\\n                                     ),\\r\\n          tooltip = case(\\r\\n                        metric_name == \\\"total\\\" and target_type == \\\"sqlserver\\\", strcat(\\\"There is a total of \\\", toint(metric), \\\" SQL Server instance(s) monitored within the last 72 hours\\\"),\\r\\n                        metric_name == \\\"new\\\" and target_type == \\\"sqlserver\\\", strcat(toint(metric), \\\" new SQL Server instance(s) appeared within the last three hours\\\"),\\r\\n                        metric_name == \\\"not collecting\\\" and target_type == \\\"sqlserver\\\", strcat(\\\"No data was collected from \\\", toint(metric), \\\" SQL Server instance(s) for the last one hour or longer\\\"),\\r\\n                        metric_name == \\\"total\\\" and target_type == \\\"sqlmi\\\", strcat(\\\"There is a total of \\\", toint(metric), \\\" managed instance(s) monitored within the last 72 hours\\\"),\\r\\n                        metric_name == \\\"new\\\" and target_type == \\\"sqlmi\\\", strcat(toint(metric), \\\" new managed instance(s) appeared within the last three hours\\\"),\\r\\n                        metric_name == \\\"not collecting\\\" and target_type == \\\"sqlmi\\\", strcat(\\\"No data was collected from \\\", toint(metric), \\\" managed instance(s) for the last one hour or longer\\\"),\\r\\n                        metric_name == \\\"total\\\" and target_type == \\\"sqldb_single_database\\\", strcat(\\\"There is a total of \\\", toint(metric), \\\" database(s) monitored within the last 72 hours\\\"),\\r\\n                        metric_name == \\\"new\\\" and target_type == \\\"sqldb_single_database\\\", strcat(toint(metric), \\\" new database(s) appeared within the last three hours\\\"),\\r\\n                        metric_name == \\\"not collecting\\\" and target_type == \\\"sqldb_single_database\\\", strcat(\\\"No data was collected from \\\", toint(metric), \\\" database(s) for the last one hour or longer\\\"),\\r\\n                        metric_name == \\\"total\\\" and target_type == \\\"sqldb_elastic_pool\\\", strcat(\\\"There is a total of \\\", toint(metric), \\\" elastic pool(s) monitored within the last 72 hours\\\"),\\r\\n                        metric_name == \\\"new\\\" and target_type == \\\"sqldb_elastic_pool\\\", strcat(toint(metric), \\\" new elastic pool(s) appeared within the last three hours\\\"),\\r\\n                        metric_name == \\\"not collecting\\\" and target_type == \\\"sqldb_elastic_pool\\\", strcat(\\\"No data was collected from \\\", toint(metric), \\\" elastic pool(s) for the last one hour or longer\\\"),\\r\\n                        \\\"\\\"\\r\\n                        )\",\"clusterName\":\"{adxClusterUri}\",\"databaseName\":\"{adxDatabase}\"}",
        "size": 3,
        "queryType": 9,
        "visualization": "tiles",
        "tileSettings": {
          "titleContent": {
            "columnMatch": "target_type",
            "formatter": 1,
            "formatOptions": {
              "linkColumn": "fleet_link",
              "linkTarget": "WorkbookTemplate",
              "workbookContext": {
                "componentIdSource": "workbook",
                "resourceIdsSource": "workbook",
                "templateIdSource": "column",
                "templateId": "fleet_link",
                "typeSource": "workbook",
                "gallerySource": "default",
                "locationSource": "workbook",
                "workbookName": "[\"fleet_workbook_name\"]"
              }
            },
            "tooltipFormat": {
              "tooltip": "[\"tooltip\"]"
            }
          },
          "leftContent": {
            "columnMatch": "metric_name",
            "formatter": 18,
            "formatOptions": {
              "thresholdsOptions": "icons",
              "thresholdsGrid": [
                {
                  "operator": "==",
                  "thresholdValue": "total",
                  "representation": "1",
                  "text": "[\"metric\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "new",
                  "representation": "success",
                  "text": "[\"metric\"]"
                },
                {
                  "operator": "==",
                  "thresholdValue": "not collecting",
                  "representation": "2",
                  "text": "[\"metric\"]"
                },
                {
                  "operator": "Default",
                  "thresholdValue": null,
                  "representation": "Blank",
                  "text": "[\"metric\"]"
                }
              ]
            },
            "numberFormat": {
              "unit": 17,
              "options": {
                "style": "decimal",
                "useGrouping": true
              }
            }
          },
          "showBorder": false,
          "sortCriteriaField": "tile_ordinal",
          "sortOrderField": 1,
          "size": "auto"
        }
      },
      "conditionalVisibility": {
        "parameterName": "adxClusterPingResult",
        "comparison": "isEqualTo",
        "value": "1"
      },
      "name": "target_counts"
    }
  ],
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}